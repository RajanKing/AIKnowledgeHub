import React, { useState } from "react";
import { Button } from "@/components/ui/button";
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { MindMap } from "@/components/ui/mind-map";
import { cn } from "@/lib/utils";

interface AiOutputPanelProps {
  summary?: string;
  isVisible?: boolean;
  className?: string;
}

export const AiOutputPanel: React.FC<AiOutputPanelProps> = ({
  summary,
  isVisible = true,
  className,
}) => {
  const [summaryLength, setSummaryLength] = useState<'brief' | 'detailed' | 'full'>('brief');
  
  // MindMap data - ideally this would come from the backend
  const mindMapData = {
    nodes: [
      {
        id: "central",
        label: "AI Ethics",
        position: { x: "50%", y: "50%" },
        color: "primary",
      },
      {
        id: "transparency",
        label: "Transparency",
        position: { x: "30%", y: "30%" },
        color: "blue",
      },
      {
        id: "fairness",
        label: "Fairness",
        position: { x: "70%", y: "30%" },
        color: "green",
      },
      {
        id: "accountability",
        label: "Accountability",
        position: { x: "30%", y: "70%" },
        color: "purple",
      },
      {
        id: "privacy",
        label: "Privacy",
        position: { x: "70%", y: "70%" },
        color: "yellow",
      },
    ],
    connections: [
      { source: "central", target: "transparency" },
      { source: "central", target: "fairness" },
      { source: "central", target: "accountability" },
      { source: "central", target: "privacy" },
    ],
  };
  
  if (!isVisible) return null;
  
  return (
    <div className={cn(
      "w-full lg:w-96 border-t lg:border-t-0 lg:border-l border-dark-700 bg-dark-800 overflow-y-auto scrollbar-hide",
      className
    )}>
      <Tabs defaultValue="summary">
        <TabsList className="w-full border-b border-dark-700 bg-transparent">
          <TabsTrigger 
            value="summary" 
            className="px-4 py-3 data-[state=active]:border-b-2 data-[state=active]:border-primary-500 data-[state=active]:text-primary-400 data-[state=active]:shadow-none rounded-none"
          >
            Summary
          </TabsTrigger>
          <TabsTrigger 
            value="mindmap"
            className="px-4 py-3 data-[state=active]:border-b-2 data-[state=active]:border-primary-500 data-[state=active]:text-primary-400 data-[state=active]:shadow-none rounded-none"
          >
            Mind Map
          </TabsTrigger>
          <TabsTrigger 
            value="qa"
            className="px-4 py-3 data-[state=active]:border-b-2 data-[state=active]:border-primary-500 data-[state=active]:text-primary-400 data-[state=active]:shadow-none rounded-none"
          >
            Q&A
          </TabsTrigger>
        </TabsList>
        
        <TabsContent value="summary" className="p-4 m-0">
          <div className="flex items-center justify-between mb-4">
            <h3 className="font-medium">Document Summary</h3>
            <div className="flex">
              <Button variant="ghost" size="icon" className="p-1.5">
                <i className="ri-refresh-line text-lg"></i>
              </Button>
              <Button variant="ghost" size="icon" className="p-1.5">
                <i className="ri-more-2-fill text-lg"></i>
              </Button>
            </div>
          </div>
          
          {/* Summary Length Selector */}
          <div className="flex space-x-2 mb-4">
            <Button
              variant="ghost"
              className={cn(
                "flex-1 py-1.5 text-sm",
                summaryLength === 'brief' && "bg-primary-500 bg-opacity-10 text-primary-400"
              )}
              onClick={() => setSummaryLength('brief')}
            >
              Brief
            </Button>
            <Button
              variant="ghost"
              className={cn(
                "flex-1 py-1.5 text-sm",
                summaryLength === 'detailed' && "bg-primary-500 bg-opacity-10 text-primary-400"
              )}
              onClick={() => setSummaryLength('detailed')}
            >
              Detailed
            </Button>
            <Button
              variant="ghost"
              className={cn(
                "flex-1 py-1.5 text-sm",
                summaryLength === 'full' && "bg-primary-500 bg-opacity-10 text-primary-400"
              )}
              onClick={() => setSummaryLength('full')}
            >
              Full
            </Button>
          </div>
          
          {/* Summary Content */}
          <div className="prose prose-sm prose-invert max-w-none">
            <div dangerouslySetInnerHTML={{ __html: summary || '' }} />
            
            <div className="mt-4 text-xs text-gray-400">
              <p>Generated by ChatGPT â€¢ 2 minutes ago</p>
            </div>
          </div>
          
          {/* Export Options */}
          <div className="mt-6">
            <h4 className="text-sm font-medium mb-2">Export Summary</h4>
            <div className="flex flex-wrap gap-2">
              <Button variant="outline" size="sm" className="text-sm h-8">
                <i className="ri-markdown-line mr-1.5"></i>
                <span>Markdown</span>
              </Button>
              <Button variant="outline" size="sm" className="text-sm h-8">
                <i className="ri-text-wrap text-sm mr-1.5"></i>
                <span>Text</span>
              </Button>
              <Button variant="outline" size="sm" className="text-sm h-8">
                <i className="ri-file-copy-line mr-1.5"></i>
                <span>Copy</span>
              </Button>
              <Button variant="outline" size="sm" className="text-sm h-8">
                <i className="ri-more-line mr-1.5"></i>
                <span>More</span>
              </Button>
            </div>
          </div>
        </TabsContent>
        
        <TabsContent value="mindmap" className="p-4 m-0">
          <div className="flex items-center justify-between mb-4">
            <h3 className="font-medium">Mind Map</h3>
            <div className="flex">
              <Button variant="ghost" size="icon" className="p-1.5">
                <i className="ri-refresh-line text-lg"></i>
              </Button>
              <Button variant="ghost" size="icon" className="p-1.5">
                <i className="ri-more-2-fill text-lg"></i>
              </Button>
            </div>
          </div>
          
          <MindMap 
            title="AI Ethics" 
            nodes={mindMapData.nodes} 
            connections={mindMapData.connections} 
          />
          
          <div className="mt-2 flex justify-end gap-2">
            <Button variant="outline" size="sm">
              <i className="ri-edit-line mr-1.5"></i>
              <span>Edit</span>
            </Button>
            <Button variant="outline" size="sm">
              <i className="ri-download-line mr-1.5"></i>
              <span>Export PNG</span>
            </Button>
          </div>
        </TabsContent>
        
        <TabsContent value="qa" className="p-4 m-0">
          <div className="flex items-center justify-between mb-4">
            <h3 className="font-medium">Ask Questions</h3>
            <Button variant="ghost" size="icon" className="p-1.5">
              <i className="ri-more-2-fill text-lg"></i>
            </Button>
          </div>
          
          <div className="bg-dark-700 rounded-lg p-4 mb-4">
            <p className="text-sm text-center text-gray-400">
              Ask any question about the document and get AI-powered answers with source references.
            </p>
          </div>
          
          <div className="relative">
            <Input
              className="pr-10 border border-dark-600 bg-dark-700 placeholder-gray-400"
              placeholder="What are the key principles of AI ethics?"
            />
            <Button
              variant="ghost"
              size="icon"
              className="absolute right-1 top-1/2 transform -translate-y-1/2"
            >
              <i className="ri-send-plane-fill text-primary-400"></i>
            </Button>
          </div>
        </TabsContent>
      </Tabs>
    </div>
  );
};
